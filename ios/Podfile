# Define the platform version globally
platform :ios, '18.1'

# Disable CocoaPods analytics to speed up builds
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Define project build configurations
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Fetch Flutter root directory
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

# Include Flutter's pod helper script
require File.expand_path('/Users/admin/Desktop/Ruhi/flutter/packages/flutter_tools/bin/podhelper', __FILE__)

# Flutter setup
flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Install Firebase and Google Sign-In dependencies
  pod 'Firebase/Auth'
  pod 'Firebase/Firestore'
  pod 'Firebase/Core'
  pod 'GoogleSignIn'

  # Install all Flutter-related pods
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # Target for unit tests
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# Post-install configuration
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    # Exclude arm64 architecture for iOS simulators to avoid compatibility issues
    target.build_configurations.each do |config|
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
    end
  end
end
